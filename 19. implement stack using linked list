#include <stdio.h>
#include <stdlib.h>
struct Stack {
int data;
struct Stack* next;
};
void push(struct Stack** top, int value) {
struct Stack* newNode = (struct Stack*)malloc(sizeof(struct Stack));
newNode->data = value;
newNode->next = *top;
*top = newNode;
}
int pop(struct Stack** top) {
if (*top == NULL) {
printf("Stack Underflow\n");
return -1;
}
struct Stack* temp = *top;
int popped = temp->data;
*top = temp->next;
free(temp);
return popped;
}
int peek(struct Stack* top) {
if (top == NULL) {
printf("Stack is empty\n");
return -1;
}
return top->data;
}
int isEmpty(struct Stack* top) {
return top == NULL;
}
void display(struct Stack* top) {
struct Stack* temp = top;
while (temp != NULL) {
printf("%d ", temp->data);
temp = temp->next;

}
printf("\n");
}
int main() {
struct Stack* top = NULL;
push(&top, 10);
push(&top, 20);
push(&top, 30);
printf("Stack after push operations: ");
display(top);
printf("Popped element: %d\n", pop(&top));
printf("Stack after pop operation: ");
display(top);
printf("Peek element: %d\n", peek(top));
return 0;
}
